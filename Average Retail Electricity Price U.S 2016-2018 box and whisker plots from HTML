{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "df = pd.read_html('https://www.eia.gov/electricity/state/')\n",
    "df = df[0].drop(51).drop(11)\n",
    "\n",
    "df1 = pd.read_html('https://www.eia.gov/electricity/state/archive/2017/')\n",
    "df1 = df1[0].drop(51).drop(11)\n",
    "\n",
    "df2 = pd.read_html('https://www.eia.gov/electricity/state/archive/2016/')\n",
    "df2 = df2[0].drop(51).drop(11)\n",
    "\n",
    "df = df['Average retail price (cents/kWh)']\n",
    "df1 = df1['Average retail price (cents/kWh)']\n",
    "df2 = df2['Average retail price (cents/kWh)']\n",
    "data = [df,df1,df2]\n",
    "\n",
    "fig1, ax1 = plt.subplots()\n",
    "\n",
    "x = 1\n",
    "ax1.boxplot(data,vert=False)\n",
    "ax1.set_title('Average Retail Electricity Price (cents/kWh) \\n All States (Excluding HI), 2016-2018')\n",
    "ticks = np.arange(6,22)\n",
    "ax1.set_xticks(ticks)\n",
    "ylabels = ['2018','2017','2016']\n",
    "ax1.set_yticklabels(ylabels)\n",
    "ax1.set_ylabel('Year')\n",
    "ax1.set_xlabel('cents/kWh')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
